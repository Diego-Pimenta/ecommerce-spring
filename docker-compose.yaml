services:
  redis:
    image: redis:7.4-alpine
    container_name: redis
    restart: always
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASS}
    ports:
      - "6379:6379"
    volumes:
      - cache:/data
    networks:
      - ecommerce

  mysqldb:
    image: mysql:latest
    container_name: mysqldb
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - data:/var/lib/mysql
#      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - ecommerce

  backend:
    image: diegopimenta/ecommerce-spring:v1.1
    container_name: backend
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - redis
      - mysqldb
    networks:
      - ecommerce

volumes:
  cache:
    name: cache-vol
    driver: local
  data:
    name: data-vol
    driver: local

networks:
  ecommerce:
    name: ecommerce-net
    driver: bridge
