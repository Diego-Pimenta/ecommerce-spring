{
  "openapi": "3.0.1",
  "info": {
    "title": "Demo Ecommerce API",
    "description": "API documentation for managing products, sales and users",
    "contact": {
      "name": "Diego Pimenta",
      "url": "https://github.com/Diego-Pimenta",
      "email": "diegopimenta888@gmail.com"
    },
    "license": {
      "name": "Apache License",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "v1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Contains operations related with the user"
    },
    {
      "name": "Report",
      "description": "Contains operations related with the report"
    },
    {
      "name": "Sale",
      "description": "Contains operations related with the sale"
    },
    {
      "name": "Authentication",
      "description": "Operation of authentication for the user"
    },
    {
      "name": "Product Stock",
      "description": "Contains operations related with the product stock"
    }
  ],
  "paths": {
    "/v1/users/{cpf}": {
      "get": {
        "tags": [
          "User",
          "Get"
        ],
        "summary": "Retrieve an user by cpf",
        "description": "Get an user object by specifying its cpf",
        "operationId": "findByCpf",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      },
      "put": {
        "tags": [
          "User",
          "Put"
        ],
        "summary": "Update an user by cpf",
        "description": "Modify an user object with body content by its cpf",
        "operationId": "update",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid operation with data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict with existing data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Delete",
          "User"
        ],
        "summary": "Delete an user by cpf",
        "description": "Remove an user object by specifying its cpf",
        "operationId": "delete",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User successfully deleted"
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      }
    },
    "/v1/sales/{id}": {
      "get": {
        "tags": [
          "Sale",
          "Get"
        ],
        "summary": "Retrieve a sale by id",
        "description": "Get a sale object by specifying its id",
        "operationId": "findById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sale successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "Sale not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      },
      "put": {
        "tags": [
          "Sale",
          "Put"
        ],
        "summary": "Update a sale by id",
        "description": "Modify a sale object with body content by its id",
        "operationId": "update_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sale successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid operation with data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "Sale data not achievable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Delete",
          "Sale"
        ],
        "summary": "Delete a sale by id",
        "description": "Remove a sale object by specifying its id",
        "operationId": "delete_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Sale successfully deleted"
          },
          "400": {
            "description": "Invalid operation with data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "Sale not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      }
    },
    "/v1/products/{id}": {
      "get": {
        "tags": [
          "Get",
          "Product Stock"
        ],
        "summary": "Retrieve a product in stock by id",
        "description": "Get a product object by specifying its id",
        "operationId": "findById_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product successfully retrieved from stock",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStockResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "Product not found in stock",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      },
      "put": {
        "tags": [
          "Product Stock",
          "Put"
        ],
        "summary": "Update a product in stock by id",
        "description": "Modify a product object with body content by its id",
        "operationId": "update_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductStockRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Product successfully updated in stock",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStockResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid operation with data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "Product not found in stock",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict with existing data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Delete",
          "Product Stock"
        ],
        "summary": "Delete a product in stock by id",
        "description": "Remove a product object by specifying its id",
        "operationId": "delete_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product successfully deleted from stock"
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "Product not found in stock",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      }
    },
    "/v1/users": {
      "get": {
        "tags": [
          "User",
          "Get"
        ],
        "summary": "Retrieve all users",
        "description": "Get all user objects",
        "operationId": "findAll",
        "responses": {
          "200": {
            "description": "All users successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      },
      "post": {
        "tags": [
          "User",
          "Post"
        ],
        "summary": "Create a new user",
        "description": "Save an user object with body content",
        "operationId": "save",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid operation with data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict with existing data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sales": {
      "get": {
        "tags": [
          "Sale",
          "Get"
        ],
        "summary": "Retrieve all sales",
        "description": "Get all sale objects with pagination",
        "operationId": "findAll_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 5
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "moment"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "DESC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All sales successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sale",
          "Post"
        ],
        "summary": "Create a new sale",
        "description": "Save a sale object with body content",
        "operationId": "save_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Sale successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid operation with data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "Sale data not achievable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      }
    },
    "/v1/products": {
      "get": {
        "tags": [
          "Get",
          "Product Stock"
        ],
        "summary": "Retrieve all products in stocks",
        "description": "Get all product objects with pagination",
        "operationId": "findAll_2",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "name"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All products successfully retrieved from stock",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStockResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      },
      "post": {
        "tags": [
          "Post",
          "Product Stock"
        ],
        "summary": "Create a new product in stock",
        "description": "Save a product object with body content",
        "operationId": "save_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductStockRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Product successfully created in stock",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStockResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid operation with data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict with existing data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      }
    },
    "/v1/auth/login": {
      "post": {
        "tags": [
          "Post",
          "Authentication"
        ],
        "summary": "Authenticate an user",
        "description": "Generates a jwt token with permissions to the user",
        "operationId": "authentication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User successfully authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "401": {
            "description": "User credentials don't match",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/status/{cpf}": {
      "patch": {
        "tags": [
          "User",
          "Patch"
        ],
        "summary": "Update an user status by cpf",
        "description": "Modify an user object with body content by its cpf",
        "operationId": "updateStatus",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateActiveStatusRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid operation with data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      }
    },
    "/v1/users/role/{cpf}": {
      "patch": {
        "tags": [
          "User",
          "Patch"
        ],
        "summary": "Update an user role by cpf",
        "description": "Modify an user object with body content by its cpf",
        "operationId": "updateRole",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRoleRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid operation with data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      }
    },
    "/v1/users/change-password/{cpf}": {
      "patch": {
        "tags": [
          "User",
          "Patch"
        ],
        "summary": "Update an user password by cpf",
        "description": "Modify an user object with body content by its cpf",
        "operationId": "updatePassword",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPasswordRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid operation with data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "401": {
            "description": "User credentials don't match",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sales/status/{id}": {
      "patch": {
        "tags": [
          "Sale",
          "Patch"
        ],
        "summary": "Update a sale status by id",
        "description": "Modify a sale object with body content by its id",
        "operationId": "updateStatus_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSaleStatusRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sale successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid operation with data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "Sale data not achievable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      }
    },
    "/v1/products/status/{id}": {
      "patch": {
        "tags": [
          "Patch",
          "Product Stock"
        ],
        "summary": "Update a product status in stock by id",
        "description": "Modify a product object with body content by its id",
        "operationId": "updateStatus_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateActiveStatusRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Product successfully updated in stock",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStockResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid operation with data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "Product not found in stock",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      }
    },
    "/v1/reports/user/{cpf}/month/{month}": {
      "get": {
        "tags": [
          "Report",
          "Get"
        ],
        "summary": "Retrieve all sales by month",
        "description": "Get all sale objects by specifying its month",
        "operationId": "findByMonth",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All sales successfully retrieved by month",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      }
    },
    "/v1/reports/user/{cpf}/date/{date}": {
      "get": {
        "tags": [
          "Report",
          "Get"
        ],
        "summary": "Retrieve all sales by date",
        "description": "Get all sale objects by specifying its date",
        "operationId": "findByDate",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All sales successfully retrieved by date",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      }
    },
    "/v1/reports/user/{cpf}/current-week": {
      "get": {
        "tags": [
          "Report",
          "Get"
        ],
        "summary": "Retrieve all sales by current week",
        "description": "Get all sale objects by current week",
        "operationId": "findByCurrentWeek",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All sales successfully retrieved by current week",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "security": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "CLIENT",
              "ADMIN"
            ]
          },
          "active": {
            "type": "boolean"
          },
          "phone_number": {
            "type": "string"
          }
        }
      },
      "StandardError": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "path": {
            "type": "string"
          }
        }
      },
      "UpdateUserRequestDto": {
        "required": [
          "address",
          "password",
          "phone_number"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "maxLength": 20,
            "minLength": 8,
            "type": "string"
          },
          "address": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "phone_number": {
            "pattern": "([(]?\\d{2}[)]?)\\d{5}-?\\d{4}",
            "type": "string"
          }
        }
      },
      "ProductStockResponseDto": {
        "required": [
          "@class"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "unit_price": {
            "type": "number"
          },
          "@class": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "@class"
        }
      },
      "SaleItemResponseDto": {
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/ProductStockResponseDto"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number"
          },
          "discount": {
            "type": "number"
          },
          "sub_total": {
            "type": "number"
          }
        }
      },
      "SaleResponseDto": {
        "required": [
          "@class"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "moment": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "WAITING_PAYMENT",
              "PAID",
              "SHIPPED",
              "DONE",
              "CANCELLED"
            ]
          },
          "customer": {
            "$ref": "#/components/schemas/UserResponseDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItemResponseDto"
            }
          },
          "total": {
            "type": "number"
          },
          "@class": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "@class"
        }
      },
      "SaleItemRequestDto": {
        "required": [
          "product_id",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "product_id": {
            "minimum": 0,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SaleRequestDto": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItemRequestDto"
            }
          }
        }
      },
      "UpdateProductStockRequestDto": {
        "required": [
          "active",
          "category",
          "name",
          "quantity",
          "unit_price"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string"
          },
          "quantity": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "unit_price": {
            "maximum": 999999,
            "minimum": 0,
            "type": "number"
          }
        }
      },
      "CreateUserRequestDto": {
        "required": [
          "address",
          "cpf",
          "name",
          "password",
          "phone_number"
        ],
        "type": "object",
        "properties": {
          "cpf": {
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "name": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "maxLength": 20,
            "minLength": 8,
            "type": "string"
          },
          "address": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "phone_number": {
            "pattern": "([(]?\\d{2}[)]?)\\d{5}-?\\d{4}",
            "type": "string"
          }
        }
      },
      "CreateProductStockRequestDto": {
        "required": [
          "category",
          "name",
          "quantity",
          "unit_price"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string"
          },
          "quantity": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "unit_price": {
            "maximum": 999999,
            "minimum": 0,
            "type": "number"
          }
        }
      },
      "AuthenticationResponseDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "expiration": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AuthenticationRequestDto": {
        "required": [
          "cpf",
          "password"
        ],
        "type": "object",
        "properties": {
          "cpf": {
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "password": {
            "maxLength": 20,
            "minLength": 8,
            "type": "string"
          }
        }
      },
      "UpdateActiveStatusRequestDto": {
        "required": [
          "active"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          }
        }
      },
      "UpdateUserRoleRequestDto": {
        "required": [
          "role"
        ],
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "CLIENT",
              "ADMIN"
            ]
          }
        }
      },
      "UpdateUserPasswordRequestDto": {
        "required": [
          "new_password",
          "old_password"
        ],
        "type": "object",
        "properties": {
          "old_password": {
            "maxLength": 20,
            "minLength": 8,
            "type": "string"
          },
          "new_password": {
            "maxLength": 20,
            "minLength": 8,
            "type": "string"
          }
        }
      },
      "UpdateSaleStatusRequestDto": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "WAITING_PAYMENT",
              "PAID",
              "SHIPPED",
              "DONE",
              "CANCELLED"
            ]
          }
        }
      },
      "ReportResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "moment": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "WAITING_PAYMENT",
              "PAID",
              "SHIPPED",
              "DONE",
              "CANCELLED"
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItemResponseDto"
            }
          },
          "total": {
            "type": "number"
          }
        }
      }
    },
    "securitySchemes": {
      "security": {
        "type": "http",
        "description": "Authentication required with bearer token",
        "name": "security",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}